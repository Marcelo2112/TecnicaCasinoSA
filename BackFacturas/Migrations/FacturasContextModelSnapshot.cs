// <auto-generated />
using System;
using BackFacturas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackFacturas.Migrations
{
    [DbContext(typeof(FacturasContext))]
    partial class FacturasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackFacturas.Models.Cliente", b =>
                {
                    b.Property<int>("RutCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RutCliente"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("text");

                    b.HasKey("RutCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BackFacturas.Models.DetalleFactura", b =>
                {
                    b.Property<int>("IdDetalleFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDetalleFactura"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int?>("FacturaIdFactura")
                        .HasColumnType("integer");

                    b.Property<int>("IdFactura")
                        .HasColumnType("integer");

                    b.Property<int>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductoIdProducto")
                        .HasColumnType("integer");

                    b.Property<int>("SubTotal")
                        .HasColumnType("integer");

                    b.HasKey("IdDetalleFactura");

                    b.HasIndex("FacturaIdFactura");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("DetallesFactura");
                });

            modelBuilder.Entity("BackFacturas.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFactura"));

                    b.Property<int?>("ClienteRutCliente")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("text");

                    b.Property<int>("RutClienteFk")
                        .HasColumnType("integer");

                    b.Property<int>("total")
                        .HasColumnType("integer");

                    b.HasKey("IdFactura");

                    b.HasIndex("ClienteRutCliente");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("BackFacturas.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("BackFacturas.Models.DetalleFactura", b =>
                {
                    b.HasOne("BackFacturas.Models.Factura", "Factura")
                        .WithMany("Detalles")
                        .HasForeignKey("FacturaIdFactura");

                    b.HasOne("BackFacturas.Models.Producto", "Producto")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("ProductoIdProducto");

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BackFacturas.Models.Factura", b =>
                {
                    b.HasOne("BackFacturas.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteRutCliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BackFacturas.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("BackFacturas.Models.Factura", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("BackFacturas.Models.Producto", b =>
                {
                    b.Navigation("DetallesFactura");
                });
#pragma warning restore 612, 618
        }
    }
}
